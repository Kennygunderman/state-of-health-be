generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model daily_exercises {
  id             String          @id(map: "daily_exercise_pkey") @db.Uuid
  workout_day_id String          @db.Uuid
  exercise_id    String          @db.Uuid
  user_exercises user_exercises  @relation(fields: [exercise_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "daily_exercise_exercise_id_fkey")
  workout_days   workout_days    @relation(fields: [workout_day_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "daily_exercise_workout_day_id_fkey")
  exercise_sets  exercise_sets[]
}

model exercise_sets {
  id                String          @id(map: "exercise_set_pkey") @db.Uuid
  daily_exercise_id String          @db.Uuid
  reps              Int
  weight            Float
  completed         Boolean?        @default(false)
  set_number        Int?
  completed_at      DateTime?       @db.Date
  daily_exercises   daily_exercises @relation(fields: [daily_exercise_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "exercise_set_daily_exercise_id_fkey")
}

model user_exercises {
  id                 String            @id(map: "exercise_pkey") @db.Uuid
  name               String
  exercise_type      String
  exercise_body_part String
  user_id            String?
  deleted_at         DateTime?         @db.Timestamptz(6)
  daily_exercises    daily_exercises[]
  users              users?            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_exercise_user_id_fkey")
}

model users {
  id             String           @id
  first_name     String?
  last_name      String?
  email          String           @unique
  templates      templates[]
  user_exercises user_exercises[]
}

model workout_days {
  id              String            @id(map: "workout_day_pkey") @db.Uuid
  user_id         String
  date            DateTime          @db.Date
  has_synced      Boolean?          @default(false)
  daily_exercises daily_exercises[]

  @@unique([user_id, date], map: "unique_user_date")
}

model templates {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String
  name         String
  tagline      String
  exercise_ids String[]
  users        users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, name], map: "unique_user_template_name")
  @@index([user_id], map: "idx_templates_user_id")
}
